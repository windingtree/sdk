// tsup.config.ts
import { defineConfig } from "tsup";

// package.json
var dependencies = {
  "h3-js": "^4.1.0",
  luxon: "^3.3.0",
  viem: "^1.3.0"
};

// tsup.config.ts
var tsup_config_default = defineConfig([
  {
    tsconfig: "./tsconfig-build.json",
    entry: {
      index: "./src/index.ts",
      h3: "./src/h3.ts",
      regex: "./src/regex.ts",
      text: "./src/text.ts",
      time: "./src/time.ts",
      uid: "./src/uid.ts",
      wallet: "./src/wallet.ts"
    },
    platform: "neutral",
    treeshake: true,
    dts: { resolve: true },
    sourcemap: true,
    splitting: false,
    clean: true,
    format: ["esm", "cjs"],
    external: Object.keys(dependencies)
  }
]);
export {
  tsup_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidHN1cC5jb25maWcudHMiLCAicGFja2FnZS5qc29uIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJjb25zdCBfX2luamVjdGVkX2ZpbGVuYW1lX18gPSBcIi9ob21lL2tvc3R5c2gvZGV2L3d0bXAtc2RrLXJlbW90ZS9wYWNrYWdlcy91dGlscy90c3VwLmNvbmZpZy50c1wiO2NvbnN0IF9faW5qZWN0ZWRfZGlybmFtZV9fID0gXCIvaG9tZS9rb3N0eXNoL2Rldi93dG1wLXNkay1yZW1vdGUvcGFja2FnZXMvdXRpbHNcIjtjb25zdCBfX2luamVjdGVkX2ltcG9ydF9tZXRhX3VybF9fID0gXCJmaWxlOi8vL2hvbWUva29zdHlzaC9kZXYvd3RtcC1zZGstcmVtb3RlL3BhY2thZ2VzL3V0aWxzL3RzdXAuY29uZmlnLnRzXCI7aW1wb3J0IHsgZGVmaW5lQ29uZmlnIH0gZnJvbSAndHN1cCc7XG5pbXBvcnQgeyBkZXBlbmRlbmNpZXMgfSBmcm9tICcuL3BhY2thZ2UuanNvbic7XG5cbmV4cG9ydCBkZWZhdWx0IGRlZmluZUNvbmZpZyhbXG4gIHtcbiAgICB0c2NvbmZpZzogJy4vdHNjb25maWctYnVpbGQuanNvbicsXG4gICAgZW50cnk6IHtcbiAgICAgIGluZGV4OiAnLi9zcmMvaW5kZXgudHMnLFxuICAgICAgaDM6ICcuL3NyYy9oMy50cycsXG4gICAgICByZWdleDogJy4vc3JjL3JlZ2V4LnRzJyxcbiAgICAgIHRleHQ6ICcuL3NyYy90ZXh0LnRzJyxcbiAgICAgIHRpbWU6ICcuL3NyYy90aW1lLnRzJyxcbiAgICAgIHVpZDogJy4vc3JjL3VpZC50cycsXG4gICAgICB3YWxsZXQ6ICcuL3NyYy93YWxsZXQudHMnLFxuICAgIH0sXG4gICAgcGxhdGZvcm06ICduZXV0cmFsJyxcbiAgICB0cmVlc2hha2U6IHRydWUsXG4gICAgZHRzOiB7IHJlc29sdmU6IHRydWUgfSxcbiAgICBzb3VyY2VtYXA6IHRydWUsXG4gICAgc3BsaXR0aW5nOiBmYWxzZSxcbiAgICBjbGVhbjogdHJ1ZSxcbiAgICBmb3JtYXQ6IFsnZXNtJywgJ2NqcyddLFxuICAgIGV4dGVybmFsOiBPYmplY3Qua2V5cyhkZXBlbmRlbmNpZXMpLFxuICB9LFxuXSk7XG4iLCAie1xuICBcIm5hbWVcIjogXCJAd2luZGluZ3RyZWUvc2RrLXV0aWxzXCIsXG4gIFwidmVyc2lvblwiOiBcIjEuMi4xXCIsXG4gIFwiZGVzY3JpcHRpb25cIjogXCJVdGlsaXR5IGNsYXNzIGZvciBpbnRlcmFjdGlvbiB3aXRoIHRoZSBwcm90b2NvbCBzbWFydCBjb250cmFjdHNcIixcbiAgXCJyZXBvc2l0b3J5XCI6IFwiaHR0cHM6Ly9naXRodWIuY29tL3dpbmRpbmd0cmVlL3NkayNyZWFkbWVcIixcbiAgXCJhdXRob3JcIjogXCJLb3N0aWFudHluIFNteXJub3YgPGtvc3R5c2hAZ21haWwuY29tPlwiLFxuICBcImxpY2Vuc2VcIjogXCJNSVRcIixcbiAgXCJ0eXBlXCI6IFwibW9kdWxlXCIsXG4gIFwiZmlsZXNcIjogW1xuICAgIFwiZGlzdFwiXG4gIF0sXG4gIFwidHlwZXNcIjogXCIuL2Rpc3QvaW5kZXguZC50c1wiLFxuICBcIm1haW5cIjogXCIuL2Rpc3QvaW5kZXguY2pzXCIsXG4gIFwibW9kdWxlXCI6IFwiLi9kaXN0L2luZGV4LmpzXCIsXG4gIFwiZXhwb3J0c1wiOiB7XG4gICAgXCIuXCI6IHtcbiAgICAgIFwiaW1wb3J0XCI6IHtcbiAgICAgICAgXCJ0eXBlc1wiOiBcIi4vZGlzdC9pbmRleC5kLnRzXCIsXG4gICAgICAgIFwiZGVmYXVsdFwiOiBcIi4vZGlzdC9pbmRleC5qc1wiXG4gICAgICB9LFxuICAgICAgXCJyZXF1aXJlXCI6IHtcbiAgICAgICAgXCJ0eXBlc1wiOiBcIi4vZGlzdC9pbmRleC5kLnRzXCIsXG4gICAgICAgIFwiZGVmYXVsdFwiOiBcIi4vZGlzdC9pbmRleC5janNcIlxuICAgICAgfVxuICAgIH0sXG4gICAgXCIuL2gzXCI6IHtcbiAgICAgIFwiaW1wb3J0XCI6IHtcbiAgICAgICAgXCJ0eXBlc1wiOiBcIi4vZGlzdC9oMy5kLnRzXCIsXG4gICAgICAgIFwiZGVmYXVsdFwiOiBcIi4vZGlzdC9oMy5qc1wiXG4gICAgICB9LFxuICAgICAgXCJyZXF1aXJlXCI6IHtcbiAgICAgICAgXCJ0eXBlc1wiOiBcIi4vZGlzdC9oMy5kLnRzXCIsXG4gICAgICAgIFwiZGVmYXVsdFwiOiBcIi4vZGlzdC9oMy5janNcIlxuICAgICAgfVxuICAgIH0sXG4gICAgXCIuL3JlZ2V4XCI6IHtcbiAgICAgIFwiaW1wb3J0XCI6IHtcbiAgICAgICAgXCJ0eXBlc1wiOiBcIi4vZGlzdC9yZWdleC5kLnRzXCIsXG4gICAgICAgIFwiZGVmYXVsdFwiOiBcIi4vZGlzdC9yZWdleC5qc1wiXG4gICAgICB9LFxuICAgICAgXCJyZXF1aXJlXCI6IHtcbiAgICAgICAgXCJ0eXBlc1wiOiBcIi4vZGlzdC9yZWdleC5kLnRzXCIsXG4gICAgICAgIFwiZGVmYXVsdFwiOiBcIi4vZGlzdC9yZWdleC5janNcIlxuICAgICAgfVxuICAgIH0sXG4gICAgXCIuL3RleHRcIjoge1xuICAgICAgXCJpbXBvcnRcIjoge1xuICAgICAgICBcInR5cGVzXCI6IFwiLi9kaXN0L3RleHQuZC50c1wiLFxuICAgICAgICBcImRlZmF1bHRcIjogXCIuL2Rpc3QvdGV4dC5qc1wiXG4gICAgICB9LFxuICAgICAgXCJyZXF1aXJlXCI6IHtcbiAgICAgICAgXCJ0eXBlc1wiOiBcIi4vZGlzdC90ZXh0LmQudHNcIixcbiAgICAgICAgXCJkZWZhdWx0XCI6IFwiLi9kaXN0L3RleHQuY2pzXCJcbiAgICAgIH1cbiAgICB9LFxuICAgIFwiLi90aW1lXCI6IHtcbiAgICAgIFwiaW1wb3J0XCI6IHtcbiAgICAgICAgXCJ0eXBlc1wiOiBcIi4vZGlzdC90aW1lLmQudHNcIixcbiAgICAgICAgXCJkZWZhdWx0XCI6IFwiLi9kaXN0L3RpbWUuanNcIlxuICAgICAgfSxcbiAgICAgIFwicmVxdWlyZVwiOiB7XG4gICAgICAgIFwidHlwZXNcIjogXCIuL2Rpc3QvdGltZS5kLnRzXCIsXG4gICAgICAgIFwiZGVmYXVsdFwiOiBcIi4vZGlzdC90aW1lLmNqc1wiXG4gICAgICB9XG4gICAgfSxcbiAgICBcIi4vdWlkXCI6IHtcbiAgICAgIFwiaW1wb3J0XCI6IHtcbiAgICAgICAgXCJ0eXBlc1wiOiBcIi4vZGlzdC91aWQuZC50c1wiLFxuICAgICAgICBcImRlZmF1bHRcIjogXCIuL2Rpc3QvdWlkLmpzXCJcbiAgICAgIH0sXG4gICAgICBcInJlcXVpcmVcIjoge1xuICAgICAgICBcInR5cGVzXCI6IFwiLi9kaXN0L3VpZC5kLnRzXCIsXG4gICAgICAgIFwiZGVmYXVsdFwiOiBcIi4vZGlzdC91aWQuY2pzXCJcbiAgICAgIH1cbiAgICB9LFxuICAgIFwiLi93YWxsZXRcIjoge1xuICAgICAgXCJpbXBvcnRcIjoge1xuICAgICAgICBcInR5cGVzXCI6IFwiLi9kaXN0L3dhbGxldC5kLnRzXCIsXG4gICAgICAgIFwiZGVmYXVsdFwiOiBcIi4vZGlzdC93YWxsZXQuanNcIlxuICAgICAgfSxcbiAgICAgIFwicmVxdWlyZVwiOiB7XG4gICAgICAgIFwidHlwZXNcIjogXCIuL2Rpc3Qvd2FsbGV0LmQudHNcIixcbiAgICAgICAgXCJkZWZhdWx0XCI6IFwiLi9kaXN0L3dhbGxldC5janNcIlxuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgXCJwdWJsaXNoQ29uZmlnXCI6IHtcbiAgICBcImFjY2Vzc1wiOiBcInB1YmxpY1wiXG4gIH0sXG4gIFwiZGV2RGVwZW5kZW5jaWVzXCI6IHtcbiAgICBcIkB0eXBlcy9sdXhvblwiOiBcIl4zLjMuMFwiLFxuICAgIFwiQHdpbmRpbmd0cmVlL2NvbnRyYWN0c1wiOiBcIl4xLjAuMFwiXG4gIH0sXG4gIFwiZGVwZW5kZW5jaWVzXCI6IHtcbiAgICBcImgzLWpzXCI6IFwiXjQuMS4wXCIsXG4gICAgXCJsdXhvblwiOiBcIl4zLjMuMFwiLFxuICAgIFwidmllbVwiOiBcIl4xLjMuMFwiXG4gIH0sXG4gIFwic2NyaXB0c1wiOiB7XG4gICAgXCJidWlsZFwiOiBcInRzdXBcIixcbiAgICBcImxpbnRcIjogXCJlc2xpbnQgLiAtLWV4dCAudHMgLS1pZ25vcmUtcGF0aCAuLi8uLi8ubGludGlnbm9yZVwiLFxuICAgIFwibGludDpmaXhcIjogXCJlc2xpbnQgLiAtLWV4dCAudHMgLS1pZ25vcmUtcGF0aCAuLi8uLi8ubGludGlnbm9yZSAtLWZpeCAmJiBwcmV0dGllciAtLWlnbm9yZS1wYXRoIC4uLy4uLy5saW50aWdub3JlICAtLXdyaXRlIC5cIixcbiAgICBcInRlc3RcIjogXCJ2aXRlc3QgLS1ydW4gdGVzdFwiLFxuICAgIFwidGVzdDpyZWxcIjogXCJ2aXRlc3QgcmVsYXRlZCAtLXJ1blwiXG4gIH1cbn1cbiJdLAogICJtYXBwaW5ncyI6ICI7QUFBOFIsU0FBUyxvQkFBb0I7OztBQzZGelQsbUJBQWdCO0FBQUEsRUFDZCxTQUFTO0FBQUEsRUFDVCxPQUFTO0FBQUEsRUFDVCxNQUFRO0FBQ1Y7OztBRDlGRixJQUFPLHNCQUFRLGFBQWE7QUFBQSxFQUMxQjtBQUFBLElBQ0UsVUFBVTtBQUFBLElBQ1YsT0FBTztBQUFBLE1BQ0wsT0FBTztBQUFBLE1BQ1AsSUFBSTtBQUFBLE1BQ0osT0FBTztBQUFBLE1BQ1AsTUFBTTtBQUFBLE1BQ04sTUFBTTtBQUFBLE1BQ04sS0FBSztBQUFBLE1BQ0wsUUFBUTtBQUFBLElBQ1Y7QUFBQSxJQUNBLFVBQVU7QUFBQSxJQUNWLFdBQVc7QUFBQSxJQUNYLEtBQUssRUFBRSxTQUFTLEtBQUs7QUFBQSxJQUNyQixXQUFXO0FBQUEsSUFDWCxXQUFXO0FBQUEsSUFDWCxPQUFPO0FBQUEsSUFDUCxRQUFRLENBQUMsT0FBTyxLQUFLO0FBQUEsSUFDckIsVUFBVSxPQUFPLEtBQUssWUFBWTtBQUFBLEVBQ3BDO0FBQ0YsQ0FBQzsiLAogICJuYW1lcyI6IFtdCn0K
